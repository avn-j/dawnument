// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String   @id @db.Uuid
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz()
  firstName   String   @default("") @map("first_name")
  lastName    String   @default("") @map("last_name")
  email       String   @unique @db.VarChar()
  country     String   @default("")
  dateOfBirth DateTime @default(now()) @map("date_of_birth")

  journals Journal[]

  @@map("app_users")
}

model Journal {
  id          String @id @unique @default(uuid()) @map("journal_id") @db.Uuid
  journalName String @default("Personal Journal") @map("journal_name")
  userId      String @db.Uuid

  journalEntries JournalEntry[]
  user           User           @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("journals")
}

model JournalEntry {
  id        String   @id @unique @default(uuid()) @map("entry_id") @db.Uuid
  journalId String   @map("journal_id") @db.Uuid
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()
  entryDate DateTime @map("entry_date") @db.Timestamptz()
  tags      String?
  mood      String
  content   String
  title     String

  Journal Journal @relation(fields: [journalId], references: [id], onDelete: Cascade)

  @@map("journal_entries")
}
